- name: "irods db user: {{dbuser}}"
  postgresql_user:
    name: "{{dbuser}}"
    password: "{{dbpassword}}"
  become: yes
  become_user: postgres
- name: "irods database: {{dbname}}"
  postgresql_db:
    name: "{{dbname}}"
    owner: "{{dbuser}}"
  become: yes
  become_user: postgres
- name: irods db grants
  postgresql_privs:
    db: "{{dbname}}"
    privs: ALL
    roles: "{{dbuser}}"
    type: database
  become: yes
  become_user: postgres
- name: Add source repository into sources list
  apt_repository:
    repo: deb [arch=amd64] https://packages.irods.org/apt/ {{ ansible_lsb.codename }} main
    state: present
- name: irods apt key
  apt_key:
    url: https://packages.irods.org/irods-signing-key.asc
    state: present
- name: install software
  package:
    name:
      - python3-pyodbc
      - irods-server
      - irods-database-plugin-postgres
- name: "create setup content"
  set_fact:
    content: |
      
      {
        "admin_password": "rods",
        "default_resource_directory": "/var/lib/irods/Vault",
        "default_resource_name": "demoResc",
        "host_system_information": {
          "service_account_user_name": "irods",
          "service_account_group_name": "irods"
        },
        "service_account_environment": {
          "irods_client_server_negotiation": "request_server_negotiation",
          "irods_client_server_policy": "CS_NEG_REFUSE",
          "irods_connection_pool_refresh_time_in_seconds": 300,
          "irods_cwd": "/{{irods_zonename}}/home/rods",
          "irods_default_hash_scheme": "SHA256",
          "irods_default_number_of_transfer_threads": 4,
          "irods_default_resource": "demoResc",
          "irods_encryption_algorithm": "AES-256-CBC",
          "irods_encryption_key_size": 32,
          "irods_encryption_num_hash_rounds": 16,
          "irods_encryption_salt_size": 8,
          "irods_home": "/{{irods_zonename}}/home/rods",
          "irods_host": "{{ ansible_hostname }}",
          "irods_match_hash_policy": "compatible",
          "irods_maximum_size_for_single_buffer_in_megabytes": 32,
          "irods_port": 1247,
          "irods_server_control_plane_encryption_algorithm": "AES-256-CBC",
          "irods_server_control_plane_encryption_num_hash_rounds": 16,
          "irods_server_control_plane_key": "32_byte_server_control_plane_key",
          "irods_server_control_plane_port": 1248,
          "irods_transfer_buffer_size_for_parallel_transfer_in_megabytes": 4,
          "irods_user_name": "rods",
          "irods_zone_name": "{{irods_zonename}}",
          "schema_name": "service_account_environment",
          "schema_version": "v4"
        },
        "server_config": {
          "advanced_settings": {
            "default_log_rotation_in_days": 5,
            "default_number_of_transfer_threads": 4,
            "default_temporary_password_lifetime_in_seconds": 120,
            "delay_rule_executors": [
              "{{ ansible_hostname }}"
            ],
            "delay_server_sleep_time_in_seconds": 30,
            "dns_cache": {
              "eviction_age_in_seconds": 3600,
              "shared_memory_size_in_bytes": 5000000
            },
            "hostname_cache": {
              "eviction_age_in_seconds": 3600,
              "shared_memory_size_in_bytes": 2500000
            },
            "maximum_size_for_single_buffer_in_megabytes": 32,
            "maximum_size_of_delay_queue_in_bytes": 0,
            "maximum_temporary_password_lifetime_in_seconds": 1000,
            "number_of_concurrent_delay_rule_executors": 4,
            "stacktrace_file_processor_sleep_time_in_seconds": 10,
            "transfer_buffer_size_for_parallel_transfer_in_megabytes": 4,
            "transfer_chunk_size_for_parallel_transfer_in_megabytes": 40
          },
          "catalog_provider_hosts": [
            "{{ ansible_hostname }}"
          ],
          "catalog_service_role": "provider",
          "client_api_allowlist_policy": "enforce",
          "controlled_user_connection_list": {
            "control_type": "denylist",
            "users": []
          },
          "default_dir_mode": "0750",
          "default_file_mode": "0600",
          "default_hash_scheme": "SHA256",
          "default_resource_name": "{{ irods_defaultresc }}",
          "environment_variables": {},
          "federation": [],
          "host_access_control": {
            "access_entries": []
          },
          "host_resolution": {
            "host_entries": []
          },
          "log_level": {
            "agent": "info",
            "agent_factory": "info",
            "api": "info",
            "authentication": "info",
            "database": "info",
            "delay_server": "info",
            "legacy": "info",
            "microservice": "info",
            "network": "info",
            "resource": "info",
            "rule_engine": "info",
            "server": "info",
            "sql": "info"
          },
          "match_hash_policy": "compatible",
          "negotiation_key": "32_byte_server_negotiation_key__",
          "plugin_configuration": {
            "authentication": {},
            "database": {
              "postgres": {
                "db_host": "localhost",
                "db_name": "{{ dbname }}",
                "db_odbc_driver": "PostgreSQL ANSI",
                "db_password": "{{ dbpassword }}",
                "db_port": 5432,
                "db_username": "{{ dbuser }}"
              }
            },
            "network": {},
            "resource": {},
            "rule_engines": [
            {
              "instance_name": "irods_rule_engine_plugin-irods_rule_language-instance",
              "plugin_name": "irods_rule_engine_plugin-irods_rule_language",
              "plugin_specific_configuration": {
                "re_data_variable_mapping_set": [
                  "core"
                ],
                "re_function_name_mapping_set": [
                  "core"
                ],
                "re_rulebase_set": [
                  "core"
                ],
                "regexes_for_supported_peps": [
                  "ac[^ ]*",
                  "msi[^ ]*",
                  "[^ ]*pep_[^ ]*_(pre|post|except|finally)"
                ]
              },
              "shared_memory_instance": "irods_rule_language_rule_engine"
            },
            {
              "instance_name": "irods_rule_engine_plugin-cpp_default_policy-instance",
              "plugin_name": "irods_rule_engine_plugin-cpp_default_policy",
              "plugin_specific_configuration": {}
            }
            ]
          },
          "rule_engine_namespaces": [
              ""
          ],
          "schema_name": "server_config",
          "schema_validation_base_uri": "file:///var/lib/irods/configuration_schemas",
          "schema_version": "v4",
          "server_control_plane_encryption_algorithm": "AES-256-CBC",
          "server_control_plane_encryption_num_hash_rounds": 16,
          "server_control_plane_key": "32_byte_server_control_plane_key",
          "server_control_plane_port": 1248,
          "server_control_plane_timeout_milliseconds": 10000,
          "server_port_range_end": 20199,
          "server_port_range_start": 20000,
          "xmsg_port": 1279,
          "zone_auth_scheme": "native",
          "zone_key": "TEMPORARY_ZONE_KEY",
          "zone_name": "{{irods_zonename}}",
          "zone_port": 1247,
          "zone_user": "rods"
        }
      }
- name: "create setup json: {{irods_json}}"
  copy:
    content: "{{ content }}"
    dest: "{{irods_json}}"
- name: "run irods setup"
  command: 
    cmd: "python3 /var/lib/irods/scripts/setup_irods.py --json_configuration_file {{ irods_json }}"
    creates: /var/lib/irods/.irods/irods_environment.json
